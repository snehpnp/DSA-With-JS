### **📌 JavaScript Basics – Loops, Arrays, Functions, Objects**  
Before jumping into **DSA**, it's important to have a strong understanding of **JavaScript fundamentals** like loops, arrays, functions, and objects.  

---

## **🔹 Loops in JavaScript**  
Loops allow us to execute a block of code multiple times.  

### **1️⃣ For Loop**
```js
for (let i = 1; i <= 5; i++) {
  console.log(i); // 1 2 3 4 5
}
```

### **2️⃣ While Loop**
```js
let i = 1;
while (i <= 5) {
  console.log(i);
  i++;
}
```

### **3️⃣ Do-While Loop**
```js
let i = 1;
do {
  console.log(i);
  i++;
} while (i <= 5);
```

### **4️⃣ ForEach (Used with Arrays)**
```js
const arr = [10, 20, 30];
arr.forEach(num => console.log(num));
```

---

## **🔹 Arrays in JavaScript**  
Arrays store multiple values in a single variable.

### **1️⃣ Create an Array**
```js
const numbers = [1, 2, 3, 4, 5];
```

### **2️⃣ Accessing Elements**
```js
console.log(numbers[0]); // 1
console.log(numbers.length); // 5
```

### **3️⃣ Add/Remove Elements**
```js
numbers.push(6); // Add at the end
numbers.pop();   // Remove last element
numbers.unshift(0); // Add at the beginning
numbers.shift(); // Remove first element
console.log(numbers);
```

### **4️⃣ Looping Through an Array**
```js
const nums = [1, 2, 3, 4, 5];
for (let num of nums) {
  console.log(num);
}
```

---

## **🔹 Functions in JavaScript**  
Functions help in **code reusability**.

### **1️⃣ Function Declaration**
```js
function greet(name) {
  return `Hello, ${name}!`;
}
console.log(greet("John")); // Hello, John!
```

### **2️⃣ Arrow Function**
```js
const greet = (name) => `Hello, ${name}!`;
console.log(greet("Alice"));
```

---

## **🔹 Objects in JavaScript**  
Objects store data in **key-value pairs**.

### **1️⃣ Create an Object**
```js
const person = {
  name: "Alice",
  age: 25,
  city: "New York"
};
```

### **2️⃣ Access Properties**
```js
console.log(person.name);  // Alice
console.log(person["age"]); // 25
```

### **3️⃣ Add/Update Properties**
```js
person.job = "Developer";  // Add new property
person.age = 26;  // Update property
console.log(person);
```

---

## **📌 Problem 1: Reverse an Array**
### **👉 Given an array, reverse it without using built-in methods.**  

### **🔹 Example**
**Input:** `[1, 2, 3, 4, 5]`  
**Output:** `[5, 4, 3, 2, 1]`  

### **✅ Solution**
```js
function reverseArray(arr) {
  let left = 0, right = arr.length - 1;
  while (left < right) {
    // Swap elements
    [arr[left], arr[right]] = [arr[right], arr[left]];
    left++;
    right--;
  }
  return arr;
}

console.log(reverseArray([1, 2, 3, 4, 5])); // [5, 4, 3, 2, 1]
```

---

## **📌 Problem 2: Count Even and Odd Numbers**
### **👉 Given an array, count how many numbers are even and how many are odd.**

### **🔹 Example**
**Input:** `[1, 2, 3, 4, 5, 6]`  
**Output:** `"Even: 3, Odd: 3"`  

### **✅ Solution**
```js
function countEvenOdd(arr) {
  let evenCount = 0, oddCount = 0;

  for (let num of arr) {
    if (num % 2 === 0) {
      evenCount++;
    } else {
      oddCount++;
    }
  }

  return `Even: ${evenCount}, Odd: ${oddCount}`;
}

console.log(countEvenOdd([1, 2, 3, 4, 5, 6])); // Even: 3, Odd: 3
```

---

### **🔥 Next Topic: Recursion (Factorial, Fibonacci, Sum of Digits) 🚀**
Would you like me to explain **recursion** with examples? 😊